# Translations template for PROJECT.
# Copyright (C) 2025 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2025-03-25 00:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:2
msgid "SequencePointcloudRegistrationPipeline"
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:4
msgid ""
"A module that implements an algorithm for optimizing the position and "
"orientation of a vehicle in space based on a sequence of multimodal data "
"using neural network methods."
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:9
msgid "Usage example"
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:11
msgid ""
"You should start with initializing neural model "
":class:`opr.models.registration.hregnet.HRegNet` with the desired "
"configuration and weights. For example, you can use the "
"`configs/model/registration/hregnet_light_feats.yaml <https://github.com"
"/OPR-"
"Project/OpenPlaceRecognition/blob/main/configs/model/registration/hregnet_light_feats.yaml>`_"
" config:"
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:27
msgid ""
"Then you should initialize the "
":class:`opr.pipelines.registration.pointcloud.SequencePointcloudRegistrationPipeline`."
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:44
msgid ""
"Then you can use the pipeline to infer transformation between two point "
"clouds:"
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:56
msgid "Alternatively, you can use precomputed features for database point clouds:"
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:69
msgid ""
"The pipeline will return the 4x4 `np.ndarray` transformation matrix "
"between the query and database point clouds."
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:71
msgid "More usage examples can be found in the following notebooks:"
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:73
msgid ""
"`notebooks/test_cross_season/01_PlaceRecognitionPipeline.ipynb "
"<https://github.com/OPR-"
"Project/OpenPlaceRecognition/blob/main/notebooks/test_cross_season/01_PlaceRecognitionPipeline.ipynb>`_"
msgstr ""

#: ../../source/featured_modules/02_sequence_pointcloud_registration_pipeline.rst:74
msgid ""
"`notebooks/test_public_datasets_v2/02_SequencePointcloudRegistrationPipeline.ipynb"
" <https://github.com/OPR-"
"Project/OpenPlaceRecognition/blob/main/notebooks/notebooks/test_public_datasets_v2/02_SequencePointcloudRegistrationPipeline.ipynb>`_"
msgstr ""

